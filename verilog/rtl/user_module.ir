package user_module

file_number 0 "fake_file.x"

fn __user_module__lfsr8(n: bits[8]) -> bits[8] {
  literal.4: bits[8] = literal(value=3, id=4, pos=[(0,1,19)])
  literal.6: bits[8] = literal(value=4, id=6, pos=[(0,1,30)])
  dynamic_bit_slice.5: bits[1] = dynamic_bit_slice(n, literal.4, width=1, id=5, pos=[(0,1,18)])
  dynamic_bit_slice.7: bits[1] = dynamic_bit_slice(n, literal.6, width=1, id=7, pos=[(0,1,29)])
  literal.9: bits[8] = literal(value=5, id=9, pos=[(0,1,41)])
  xor.8: bits[1] = xor(dynamic_bit_slice.5, dynamic_bit_slice.7, id=8, pos=[(0,1,26)])
  dynamic_bit_slice.10: bits[1] = dynamic_bit_slice(n, literal.9, width=1, id=10, pos=[(0,1,40)])
  literal.12: bits[8] = literal(value=7, id=12, pos=[(0,1,52)])
  literal.2: bits[8] = literal(value=0, id=2, pos=[(0,1,6)])
  xor.11: bits[1] = xor(xor.8, dynamic_bit_slice.10, id=11, pos=[(0,1,37)])
  dynamic_bit_slice.13: bits[1] = dynamic_bit_slice(n, literal.12, width=1, id=13, pos=[(0,1,51)])
  dynamic_bit_slice.3: bits[7] = dynamic_bit_slice(n, literal.2, width=7, id=3, pos=[(0,1,5)])
  xor.14: bits[1] = xor(xor.11, dynamic_bit_slice.13, id=14, pos=[(0,1,48)])
  ret concat.15: bits[8] = concat(dynamic_bit_slice.3, xor.14, id=15, pos=[(0,1,13)])
}

top fn __user_module__user_module(io_in: bits[8]) -> bits[8] {
  ret invoke.17: bits[8] = invoke(io_in, to_apply=__user_module__lfsr8, id=17, pos=[(0,2321,9)])
}
